// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/go-utils/vfsutils (interfaces: MountedRepo)

// Package changelogutils_test is a generated GoMock package.
package changelogutils_test

import (
	context "context"
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMountedRepo is a mock of MountedRepo interface
type MockMountedRepo struct {
	ctrl     *gomock.Controller
	recorder *MockMountedRepoMockRecorder
}

// MockMountedRepoMockRecorder is the mock recorder for MockMountedRepo
type MockMountedRepoMockRecorder struct {
	mock *MockMountedRepo
}

// NewMockMountedRepo creates a new mock instance
func NewMockMountedRepo(ctrl *gomock.Controller) *MockMountedRepo {
	mock := &MockMountedRepo{ctrl: ctrl}
	mock.recorder = &MockMountedRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMountedRepo) EXPECT() *MockMountedRepoMockRecorder {
	return m.recorder
}

// GetFileContents mocks base method
func (m *MockMountedRepo) GetFileContents(arg0 context.Context, arg1 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileContents", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileContents indicates an expected call of GetFileContents
func (mr *MockMountedRepoMockRecorder) GetFileContents(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileContents", reflect.TypeOf((*MockMountedRepo)(nil).GetFileContents), arg0, arg1)
}

// GetOwner mocks base method
func (m *MockMountedRepo) GetOwner() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOwner")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetOwner indicates an expected call of GetOwner
func (mr *MockMountedRepoMockRecorder) GetOwner() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOwner", reflect.TypeOf((*MockMountedRepo)(nil).GetOwner))
}

// GetRepo mocks base method
func (m *MockMountedRepo) GetRepo() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRepo")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRepo indicates an expected call of GetRepo
func (mr *MockMountedRepoMockRecorder) GetRepo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRepo", reflect.TypeOf((*MockMountedRepo)(nil).GetRepo))
}

// GetSha mocks base method
func (m *MockMountedRepo) GetSha() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSha")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSha indicates an expected call of GetSha
func (mr *MockMountedRepoMockRecorder) GetSha() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSha", reflect.TypeOf((*MockMountedRepo)(nil).GetSha))
}

// ListFiles mocks base method
func (m *MockMountedRepo) ListFiles(arg0 context.Context, arg1 string) ([]os.FileInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListFiles", arg0, arg1)
	ret0, _ := ret[0].([]os.FileInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFiles indicates an expected call of ListFiles
func (mr *MockMountedRepoMockRecorder) ListFiles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFiles", reflect.TypeOf((*MockMountedRepo)(nil).ListFiles), arg0, arg1)
}
